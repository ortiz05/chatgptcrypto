version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/scanner_db
    depends_on:
      - db
      - redis

  profile_scanner:
    build:
      context: .
      dockerfile: docker/scanner.Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/scanner_db
      - REDIS_URL=redis://redis:6379
      - SCANNER_TYPE=profile
    depends_on:
      - db
      - redis

  boost_scanner:
    build:
      context: .
      dockerfile: docker/scanner.Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/scanner_db
      - REDIS_URL=redis://redis:6379
      - SCANNER_TYPE=boost
    depends_on:
      - db
      - redis

  pair_scanner:
    build:
      context: .
      dockerfile: docker/scanner.Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/scanner_db
      - REDIS_URL=redis://redis:6379
      - SCANNER_TYPE=pair
    depends_on:
      - db
      - redis

  pool_scanner:
    build:
      context: .
      dockerfile: docker/scanner.Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/scanner_db
      - REDIS_URL=redis://redis:6379
      - SCANNER_TYPE=pool
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: scanner_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: